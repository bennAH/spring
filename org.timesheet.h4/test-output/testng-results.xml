<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="2835" started-at="2013-04-29T22:04:36Z" finished-at="2013-04-29T22:04:39Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="2835" started-at="2013-04-29T22:04:36Z" finished-at="2013-04-29T22:04:39Z">
      <class name="org.timesheet.service.dao.EmployeeDaoTestng">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="8" started-at="2013-04-29T23:04:36Z" finished-at="2013-04-29T23:04:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="2039" started-at="2013-04-29T23:04:36Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2013-04-29T23:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testAdd()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testAdd()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testAdd" duration-ms="275" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testAdd()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testAddPerson()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="FAIL" signature="testAddPerson()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testAddPerson" duration-ms="2" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <exception class="org.hibernate.HibernateException">
            <message>
              <![CDATA[No Session found for current thread]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.hibernate.HibernateException: No Session found for current thread
	at org.springframework.orm.hibernate4.SpringSessionContext.currentSession(SpringSessionContext.java:97)
	at org.hibernate.internal.SessionFactoryImpl.getCurrentSession(SessionFactoryImpl.java:980)
	at com.googlecode.genericdao.dao.hibernate.HibernateBaseDAO.getSession(HibernateBaseDAO.java:68)
	at com.googlecode.genericdao.dao.hibernate.HibernateBaseDAO._saveOrUpdateIsNew(HibernateBaseDAO.java:159)
	at com.googlecode.genericdao.dao.hibernate.GenericDAOImpl.save(GenericDAOImpl.java:101)
	at org.timesheet.service.impl.PersonDAO.addPerson(PersonDAO.java:20)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy29.addPerson(Unknown Source)
	at org.timesheet.service.dao.EmployeeDaoTestng.testAddPerson(EmployeeDaoTestng.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:200)
	at org.springframework.test.context.testng.AbstractTestNGSpringContextTests.run(AbstractTestNGSpringContextTests.java:158)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:212)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- org.hibernate.HibernateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPerson -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testAddPerson()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testFind()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testFind()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testFind" duration-ms="50" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFind -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testFind()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="1" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testRemove()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRemove()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testRemove" duration-ms="121" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testRemove()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testRemoveEmployee()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testRemoveEmployee" duration-ms="250" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveEmployee -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:38Z" finished-at="2013-04-29T23:04:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testRemoveEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:39Z" finished-at="2013-04-29T23:04:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testRemoveEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testUpdate()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="testUpdate" duration-ms="60" started-at="2013-04-29T23:04:39Z" finished-at="2013-04-29T23:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdate -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:39Z" finished-at="2013-04-29T23:04:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="1" started-at="2013-04-29T23:04:39Z" finished-at="2013-04-29T23:04:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.timesheet.service.dao.EmployeeDaoTestng.testUpdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:org.timesheet.service.dao.EmployeeDaoTestng@388530b8]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2013-04-29T23:04:39Z" finished-at="2013-04-29T23:04:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- org.timesheet.service.dao.EmployeeDaoTestng -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
